####
# ESSENTIALS
# This configuration table contains the most essential configuration values.
# You may use the "{SELF}" placeholder in these paths, it refers to
# the location (directory) of the CLI binary.
####
[essentials]
# `base_library_path` will become the "{LIBRARY_BASE}" placeholder in several tables below:
# - libraries,
# - aggregated_library.
base_library_path = "D:/_temp/MusicTesting"
# `base_tools_path` will become the "{TOOLS_BASE}" placeholder for use in the `tools` configuration table below.
base_tools_path = "{SELF}/tools/"


####
# TOOLS
# Contains configuration regarding external tools that are used (ffmpeg, etc.).
####
[tools]
# This music manager uses ffmpeg as its workhorse for audio conversion. Its configuration is available below.
[tools.ffmpeg]
# Relative path from the base directory (meaning the directory containing the executable).
# Automatically detects if it is running in debug mode (inside "target/debug" directory) and escapes that path.
binary = "{TOOLS_BASE}/ffmpeg/bin/ffmpeg.exe"
# This represents the arguments passed to ffmpeg when converting an audio file into MP3 V0.
# The placeholders {INPUT_FILE} and {OUTPUT_FILE} will be replaced with the absolute path to those files on runtime.
to_mp3_v0_args = ["-i", "{INPUT_FILE}", "-vn", "-codec:a", "libmp3lame", "-q:a", "0", "-y", "{OUTPUT_FILE}"]


####
# LIBRARY VALIDATION
# The "validate-all" command looks through all available libraries and attemps to spot any unusual or downright
# invalid folder structure and files. The function of the settings below is to give some defaults for each library
# regarding non-audio ("other") files. This is intended for stuff like allowing cover art files, logs, playlists, etc.
####
[validation]
# The distinction between audio (you'll see it below) and other files is made to detect erroneous audio files in
# e.g. the root or artist directory. To be clear: "other" files mean files everywhere,
# but "audio" files mean those only in the album directories.
allowed_other_files_by_extension = ["png", "jpg", "jpeg", "txt", "md", "log", "cue", "m3u8"]
# These files are always ignored and do not cause validation errors (these are matched by full file name).
# (".album.euphony" is a mandatory entry if you use the transcode commands)
allowed_other_files_by_name = [".album.euphony", ".album.override.euphony", "desktop.ini"]
# NOTE: If a file without a valid extension or name match is found during the scan, it is marked
# as an unexpected file and makes the validation fail (this is the entire point of validation).


####
# LIBRARY
####
# Library structure is expected to be:
#  <library directory>
#  |-- <artist>
#  |   |-- <album>
#  |   |   |-- <... audio files>
#  |   |   |-- <... cover art>
#  |   |   |-- <... possibly some album-related README, logs, etc.>
#  |   |   |-- <... possibly other directory that don't matter>
#  |   |-- <... possibly some artist-related README, etc.>
#  | ...
#  |--
#
# Add additional libraries (as many as you need) by adding keys to the "libraries" key as shown below.
[libraries]

[libraries.lossless]
# This is the full name of your library.
name = "Lossless"
# This is the full absolute path to your library. You may use the "{LIBRARY_BASE}" placeholder that was set above
# in the essentials table to avoid typing the absolute path each time.
path = "{LIBRARY_BASE}/MusicLibraryLossless"
# This array should contain the audio file extensions you allow in this library. Note that euphony expects the exact
# library structure descibed above. File extensions from this option are used when scanning album directories.
# Any file that does not match allowed_other_files_by_extension, allowed_other_files_by_name or this one shows up
# as an invalid file during the validation process (as is to be expected, it's an unexpected file after all).
allowed_audio_files_by_extension = ["flac"]
# This array should contain names of directories that should be ignored during the scanning process.
# These are names of directories in the base directory of the library.
ignored_directories_in_base_dir = []

[libraries.lossless_private]
name = "Lossless Private"
path = "{LIBRARY_BASE}/MusicLibraryLosslessPrivate"
allowed_audio_files_by_extension = ["flac"]
ignored_directories_in_base_dir = []

[libraries.standard]
name = "Standard"
path = "{LIBRARY_BASE}/MusicLibraryStandard"
allowed_audio_files_by_extension = ["mp3"]
ignored_directories_in_base_dir = []

[libraries.standard_private]
name = "Standard Private"
path = "{LIBRARY_BASE}/MusicLibraryStandardPrivate"
allowed_audio_files_by_extension = ["mp3"]
ignored_directories_in_base_dir = ["_other"]


####
# AGGREGATED LIBRARY (also called the transcoded library)
# The philosophy of this music library manager is that you should split your library
# into smaller parts: one for lossless audio, one for lossy, one for a specific collection, etc.
# However, this philosophy also acknowledges that you might want to take the library with you on the go,
# something that is hard to do when it is contains possibly huge lossless files.
#
# This is why the aggregation ("transcode" in most of the CLI) exists. It takes all of your registered "sub-libraries"
# (see `libraries` above) and transcodes them down into MP3 V0 into a single aggregated library you may then take along with you.
####
[aggregated_library]
# This path should point to the destination directory of your transcoded (aggregated) library.
path = "{LIBRARY_BASE}/MusicLibrary"
# In order to speed up the transcoding, you can increase the amount of threads that are transcoding at once.
# Anywhere between a half and all of your CPU cores are a good choice and an incredible speedup.
# The minimum value is 1.
transcode_threads = 6
# In case processing of a file fails (be it a transcode or a copy), you may want to allow
# for a retry a specific amount of times (each time delayed by a few seconds).
max_processing_retries = 2
processing_retry_delay_seconds = 2


####
# FILE METADATA
# In order to optimize the speed and remove redundant transcodes, euphony actually "tracks" your album files
# via a special dotfile called ".album.euphony" (placed in each album directory).
# Implementation details are available in the README, but the general idea and purpouse of those files are to
# understand when any single file has changed and has to be reencoded (if it's an audio file) or recopied (if it's a data file).
####
[file_metadata]
# Files with these extensions count as audio files and will be converted into MP3 V0 during the aggregation process.
# There are no library-specific settings here.
tracked_audio_extensions = [
    "mp3", "flac", "alac", "m4a", "ogg"
]
# Files with these extension count as data files and will be simply copied over into the aggregated library.
tracked_other_extensions = [
    "png", "jpg", "jpeg", "gif"
]
# NOTE: All other files are untracked.
